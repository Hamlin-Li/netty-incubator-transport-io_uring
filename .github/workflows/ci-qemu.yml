name: Build PR

on:
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:

      # Cache .kernel
      - uses: actions/cache@v2
        env:
          cache-name: build-cache-kernel
        with:
          path: ~/kernel/
          key: ${{ runner.os }}-pr-${{ env.cache-name }}-5.9.16
          restore-keys: |
            ${{ runner.os }}-pr-${{ env.cache-name }}-5.9.16

      - name: Check kernel already exists
        id: check_kernel_image_exists
        uses: andstor/file-existence-action@v1
        with:
          files: "/home/runner/kernel/bzImage-5.9.16"

      - name: Build kernel
        if: steps.check_kernel_image_exists.outputs.files_exists == 'false'
        run: |
          mkdir ~/kernel/
          wget -q https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-5.9.16.tar.xz
          tar xf linux-5.9.16.tar.xz
          cd linux-5.9.16 && cp /boot/config-`uname -r`* .config
          make ARCH=x86_64 olddefconfig
          make -j$(nproc)
          cp arch/x86/boot/bzImage ~/kernel/bzImage-5.9.16

      - name: Install dependencies
        run: |
          sudo apt-get update -q -y
          sudo apt-get install -q -y qemu-system genisoimage

      - name: Build qemu image
        run: |
          wget -q https://download.fedoraproject.org/pub/fedora/linux/releases/33/Cloud/x86_64/images/Fedora-Cloud-Base-33-1.2.x86_64.qcow2
          qemu-img create -f qcow2 -b Fedora-Cloud-Base-33-1.2.x86_64.qcow2 my-disk.qcow2 20G
          cat > meta-data << EOF
          instance-id: io-uring-00
          local-hostname: io-uring-00
          EOF
          cat > user-data << EOF
          #cloud-config
          # Set the default user
          system_info:
            default_user:
              name: netty

          # Unlock the default user
          chpasswd:
            list: |
               netty:netty
            expire: False

          # Other settings
          resize_rootfs: True
          ssh_pwauth: True
          timezone: Europe/Berlin

          bootcmd:
           - [ sh, -c, echo "=========bootcmd=========" ]

          runcmd:
           - [ sh, -c, echo "=========runcmd=========" ]

          # For pexpect to know when to log in and begin tests
          final_message: "SYSTEM READY TO LOG IN"
          EOF
